package ru.hiddenvinnyp.safefood.foodlist;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by HiddenVinnyP on 27.05.2014.
 */
public class food {

    private static final Map<String, ArrayList<String>> DIETA = createMap();

    private static Map<String, ArrayList<String>> createMap() {
        Map<String, ArrayList<String>> result = new HashMap<String, ArrayList<String>>();
        result.put("Хлеб и мучное", new ArrayList<String>(Arrays.asList("Хлеб пшеничный вчерашней " +
                "выпечки или подсушенный; сухой бисквит, печенье сухое. 1-2 раза в неделю " +
                "хорошо выпеченные не сдобные булочки, печеные пирожные с яблоками, отварным мясом " +
                "или рыбой и яйцами, джемом, ватрушка с творогом.", "", "Ржаной и любой свежий хлеб, " +
                "изделия из сдобного и слоеного теста.")));
        result.put("Сладости", new ArrayList<String>(Arrays.asList("В протертом, вареном и печеном виде " +
                "сладкие ягоды и фрукты. Пюре, кисели, муссы, желе, компоты, сливочный крем, молочный " +
                "кисель. Сахар, мед, некислое варенье, зефир, пастила", "", "Кислые, недостаточно спелые, " +
                "богатые клетчаткой фрукты и ягоды, непротертые сухофрукты, шоколад, мороженное")));
        result.put("Овощи", new ArrayList<String>(Arrays.asList("Картофель, морковь, свекла, цветная капуста. " +
                "Сваренные на пару или в воде и протертые. Непротертые ранние тыква и кабачки. " +
                "Мелкошинкованный укроп - в супы.", "Зеленый горошек. Спелые некислые томаты до 100г.",
                "Белокачанную капусту, репу, брюкву, редьку, щавель, шпинат, лук, огурцы, соленые, " +
                        "квашенные и маринованные овощи, грибы, овощные закусочные консервы.")));
        result.put("Мясо и птица", new ArrayList<String>(Arrays.asList("Паровые и отварные блюда из языка," +
                " печени, нежирной телятины, говядины, молодой нежирной баранины и обрезной свинины, кур, " +
                "индейки, кролика. Паровые котлеты, биточки, кнели, суфле, пюре, зразы; бефстроганов из " +
                "вареного мяса.", "", "Жирные и жилистые сорта мяса и птиц, утку, гуся, консервы, копченности.")));
        result.put("Яйца", new ArrayList<String>(Arrays.asList("2-3 штуки в день. Всмятку, паровой омлет.", "", "Яйца в крутую, жареные.")));
        result.put("Рыба", new ArrayList<String>(Arrays.asList("Нежирные виды без кожи, куском или в виде " +
                "котлетной массы; варится в воде или на пару.", "", "Жирную, соленую рыбу, консервы.")));
        result.put("Соусы", new ArrayList<String>(Arrays.asList("Молочные без пассировки муки, с " +
                "добавление сливочного масла, сметаны, фруктовые, молочно-фруктовые.",
                "Укроп, петрушка, ванилин, корица.", "Томатные соусы, хрен, горчицу, перец.")));
        result.put("Напитки", new ArrayList<String>(Arrays.asList("Некрепкий чай, чай с молоком, " +
                "сливки, слабые какао и кофе с молоком. Сладкие соки из фруктов и ягод. Отвар шиповника.",
                "", "Алкоголь, газированные напитки, квас, черный кофе.")));
        result.put("Молоко", new ArrayList<String>(Arrays.asList("Молоко, сливки, некислый кефир, " +
                "простокваша, ацидофилин, свежий некислый творог(протертый). Запеченные сырники, " +
                "суфле, ленивые вареники, пудинги, неострый сыр.", "Ограничить сметану", "Молочные " +
                "продукты с высокой кислотностью, острые, соленые сыры.")));
        result.put("Закуски", new ArrayList<String>(Arrays.asList("Салаты из отварных овощей, мяса, " +
                "рыбы. Язык отварной; паштет из печени; колбасы диетические; заливная рыба на овощном отваре; " +
                "неострый сыр, несоленая ветчина без жира.", "Изредка вымоченная нежирная сельдь и форшмак.",
                "Все острые и соленые закуски, консервы, копчености.")));
        result.put("Жиры", new ArrayList<String>(Arrays.asList("Сливочное несоленое масло, коровье " +
                "топленое высшего сорта. Рафинированные растительные масла, добавляемые в блюда.",
                "", "Все другие жиры.")));
        result.put("Супы", new ArrayList<String>(Arrays.asList("Из разрешенных протертых овощей на " +
                "морковном, картофельном отваре, молочные супы из протертых или хорошо разваренных круп " +
                "(геркулес,манная, рис и др.), вермишели с добавлением протертых овощей, молочные супы-пюре " +
                "из протертых овощей; суп-пюре из заранее вываренных кур и мяса. Муку для супов только " +
                "подсушивают. Супы заправляют сливочным маслом, яично-молочной смесью, сливками.", "",
                "Мясные и рыбные бульоны, грибные и крепкие овощные отвары, щи, борщи, окрошку")));
        result.put("Крупы", new ArrayList<String>(Arrays.asList("Манная, гречневая, овсяная, рис. " +
                "Каши, сваренные на молоке или воде, полувязкие и протертые. Вермишель, макароны отварные.",
                "", "Пшено, перловую, ячневую, кукурузную крупы, бобовые.")));
        result.put("Меню", new ArrayList<String>(Arrays.asList("яйцо всмятку, каша гречневая рассыпчатая, " +
                "чай с молоком", "творог свежий некислый, отвар шиповника", "суп картофельный вегетарианский, " +
                "мясо отварное, запеченное под бешамелью, морковь отварная, компот из разваренных сухофруктов",
                "отвар пшеничных отрубей с сахаром и сухариками", "рыба отварная, запеченная под молочным соусом, " +
                        "рулет морковно-яблочный, чай с молоком", "молоко")));
        return Collections.unmodifiableMap(result);
    }

    public static ArrayList<String> getKeys() {
        ArrayList<String> key = new ArrayList<String>();
        for(Map.Entry<String, ArrayList<String>> entry : DIETA.entrySet()) {
            key.add(entry.getKey());
        }
        return key;
    }

    public static ArrayList<String> getValue(String key) {
        ArrayList<String> value = new ArrayList<String>();
        value = DIETA.get(key);
        return value;
    }
}

